import { EventEmitter } from '@angular/core';
import { ClickEvent } from '../../interfaces/click-event.interface';
import { HoverRatingChangeEvent } from '../../interfaces/hover-rating-change-event.interface';
import { RatingChangeEvent } from '../../interfaces/rating-change-event.interface';
import { StarRating } from '../../services/star-rating';
import { StarRatingConfigService } from '../../services/star-rating-config.service';
import * as ɵngcc0 from '@angular/core';
export declare class StarRatingComponent extends StarRating {
    starClickChange: EventEmitter<ClickEvent>;
    ratingChange: EventEmitter<RatingChangeEvent>;
    hoverRatingChange: EventEmitter<HoverRatingChangeEvent>;
    saveOnClick($event: ClickEvent): void;
    saveOnRatingChange($event: RatingChangeEvent): void;
    saveOnHover($event: HoverRatingChangeEvent): void;
    /**ACCESSIBILITY **/
    onKeyDown(event: KeyboardEvent): void;
    onStarHover(rating?: number): void;
    constructor(config: StarRatingConfigService);
    setRating(value: number): void;
    /**
     * onStarClicked
     *
     * Is fired when a star is clicked. And updated the rating value.
     * This function returns if the disabled or readOnly
     * property is set. If provided it emits the onClick event
     * handler with the actual rating value.
     *
     * @param rating
     */
    onStarClicked(rating: number): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<StarRatingComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<StarRatingComponent, "star-rating", never, { "getHalfStarVisible": "getHalfStarVisible"; "getColor": "getColor"; "showHalfStars": "showHalfStars"; "hoverEnabled": "hoverEnabled"; "rating": "rating"; "step": "step"; "disabled": "disabled"; "readOnly": "readOnly"; "space": "space"; "starType": "starType"; "size": "size"; "speed": "speed"; "numOfStars": "numOfStars"; "direction": "direction"; "staticColor": "staticColor"; "labelPosition": "labelPosition"; "labelText": "labelText"; "id": "id"; }, { "starClickChange": "starClickChange"; "ratingChange": "ratingChange"; "hoverRatingChange": "hoverRatingChange"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Rhci1yYXRpbmcuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInN0YXItcmF0aW5nLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDbGlja0V2ZW50IH0gZnJvbSAnLi4vLi4vaW50ZXJmYWNlcy9jbGljay1ldmVudC5pbnRlcmZhY2UnO1xyXG5pbXBvcnQgeyBIb3ZlclJhdGluZ0NoYW5nZUV2ZW50IH0gZnJvbSAnLi4vLi4vaW50ZXJmYWNlcy9ob3Zlci1yYXRpbmctY2hhbmdlLWV2ZW50LmludGVyZmFjZSc7XHJcbmltcG9ydCB7IFJhdGluZ0NoYW5nZUV2ZW50IH0gZnJvbSAnLi4vLi4vaW50ZXJmYWNlcy9yYXRpbmctY2hhbmdlLWV2ZW50LmludGVyZmFjZSc7XHJcbmltcG9ydCB7IFN0YXJSYXRpbmcgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9zdGFyLXJhdGluZyc7XHJcbmltcG9ydCB7IFN0YXJSYXRpbmdDb25maWdTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvc3Rhci1yYXRpbmctY29uZmlnLnNlcnZpY2UnO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBTdGFyUmF0aW5nQ29tcG9uZW50IGV4dGVuZHMgU3RhclJhdGluZyB7XHJcbiAgICBzdGFyQ2xpY2tDaGFuZ2U6IEV2ZW50RW1pdHRlcjxDbGlja0V2ZW50PjtcclxuICAgIHJhdGluZ0NoYW5nZTogRXZlbnRFbWl0dGVyPFJhdGluZ0NoYW5nZUV2ZW50PjtcclxuICAgIGhvdmVyUmF0aW5nQ2hhbmdlOiBFdmVudEVtaXR0ZXI8SG92ZXJSYXRpbmdDaGFuZ2VFdmVudD47XHJcbiAgICBzYXZlT25DbGljaygkZXZlbnQ6IENsaWNrRXZlbnQpOiB2b2lkO1xyXG4gICAgc2F2ZU9uUmF0aW5nQ2hhbmdlKCRldmVudDogUmF0aW5nQ2hhbmdlRXZlbnQpOiB2b2lkO1xyXG4gICAgc2F2ZU9uSG92ZXIoJGV2ZW50OiBIb3ZlclJhdGluZ0NoYW5nZUV2ZW50KTogdm9pZDtcclxuICAgIC8qKkFDQ0VTU0lCSUxJVFkgKiovXHJcbiAgICBvbktleURvd24oZXZlbnQ6IEtleWJvYXJkRXZlbnQpOiB2b2lkO1xyXG4gICAgb25TdGFySG92ZXIocmF0aW5nPzogbnVtYmVyKTogdm9pZDtcclxuICAgIGNvbnN0cnVjdG9yKGNvbmZpZzogU3RhclJhdGluZ0NvbmZpZ1NlcnZpY2UpO1xyXG4gICAgc2V0UmF0aW5nKHZhbHVlOiBudW1iZXIpOiB2b2lkO1xyXG4gICAgLyoqXHJcbiAgICAgKiBvblN0YXJDbGlja2VkXHJcbiAgICAgKlxyXG4gICAgICogSXMgZmlyZWQgd2hlbiBhIHN0YXIgaXMgY2xpY2tlZC4gQW5kIHVwZGF0ZWQgdGhlIHJhdGluZyB2YWx1ZS5cclxuICAgICAqIFRoaXMgZnVuY3Rpb24gcmV0dXJucyBpZiB0aGUgZGlzYWJsZWQgb3IgcmVhZE9ubHlcclxuICAgICAqIHByb3BlcnR5IGlzIHNldC4gSWYgcHJvdmlkZWQgaXQgZW1pdHMgdGhlIG9uQ2xpY2sgZXZlbnRcclxuICAgICAqIGhhbmRsZXIgd2l0aCB0aGUgYWN0dWFsIHJhdGluZyB2YWx1ZS5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gcmF0aW5nXHJcbiAgICAgKi9cclxuICAgIG9uU3RhckNsaWNrZWQocmF0aW5nOiBudW1iZXIpOiB2b2lkO1xyXG59XHJcbiJdfQ==